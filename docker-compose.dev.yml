services:
  postgres:
    image: postgres:15
    container_name: flowcraft-postgres-dev
    environment:
      POSTGRES_USER: flowcraft
      POSTGRES_PASSWORD: flowcraft
      POSTGRES_DB: flowcraft
    ports:
      - "5432:5432"
    volumes:
      - flowcraft-postgres-dev-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flowcraft"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: flowcraft-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - flowcraft-redis-dev-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: flowcraft-api-dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.docker
    environment:
      - AIR_WORK_DIR=/app
    volumes:
      - .:/app:delegated # Mount local code into container
    ports:
      - "8080:8080"
    command: air
    restart: unless-stopped

  worker-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: flowcraft-worker-dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.docker
    volumes:
      - .:/app:delegated # Mount local code into container
    command: air -c .air.worker.toml
    restart: unless-stopped

volumes:
  flowcraft-postgres-dev-data:
  flowcraft-redis-dev-data: 